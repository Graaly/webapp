<template>
  
  <div>
    <h1>Inscrivez-vous pour commencer l'aventure !</h1>
    
    <form @submit.prevent="submit()">
      
      <input type="email" />
      
      <q-input type="email" float-label="Votre email" v-model="form.email" @blur="$v.form.email.$touch" />
      
      <!--
      <q-field :error="$v.form.email.$error">
        <q-input type="email" float-label="Votre email" v-model="form.email" @blur="$v.form.email.$touch" />
        <div class="q-field-bottom" v-if="$v.form.email.$error">
          <div class="q-field-error" v-if="!$v.form.email.required">Veuillez saisir votre adresse email.</div>
          <div class="q-field-error" v-if="!$v.form.email.email">Veuillez saisir une adresse email valide.</div>
        </div>
      </q-field>
      
      <q-field :error="$v.form.name.$error">
        <q-input float-label="Votre nom" v-model="form.name" @blur="$v.form.name.$touch" />
        <div class="q-field-bottom" v-if="$v.form.name.$error">
          <div class="q-field-error" v-if="!$v.form.name.required">Veuillez saisir votre nom.</div>
        </div>
      </q-field>
      
      <q-field>
        <q-select v-model="form.country" :options="countries" />
      </q-field>
      
      <q-field :error="$v.form.password.$error">
        <q-input type="password" v-model="form.password" float-label="Votre mot de passe"  @blur="$v.form.password.$touch" />
        <div class="q-field-bottom" v-if="$v.form.password.$error">
          <div class="q-field-error" v-if="!$v.form.password.required">Veuillez saisir votre mot de passe.</div>
        </div>
      </q-field>
      -->
      <q-btn color="primary" class="full-width">Commencer l'aventure</q-btn>
    </form>
    
  </div>
  
</template>

<script>
import { QSelect } from 'quasar'
import { required, email } from 'vuelidate/lib/validators'
export default {
  components: {
    QSelect
  },
  data: {
    title: 'Inscription',
    test: '',
    form: {
      email: '',
      name: '',
      country: ''
    },
    countries: [
      { label: 'Choisir...', value: '' },
      { label: 'Belgique', value: 'BEL' },
      { label: 'Espagne', value: 'ESP' },
      { label: 'France', value: 'FRA' }
    ]
  },
  mounted () {
    // dispatch specific title for other app components
    this.$store.dispatch('setTitle', this.$data.title);
  },
  methods: {
    submit() {
      this.$v.form.$touch()
      
      if (!this.$v.form.$error) {
        alert('form validated, try to create account');
      }
    }
  },
  validations: {
    form: {
      email: { required, email }
    }
  }
}
</script>

<style>
</style>
